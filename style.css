@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;700&family=Poppins:wght@400;600&display=swap');

:root {
    --primary-bg: #1a1a1a;
    --secondary-bg: #2b2b2b;
    --terminal-bg: rgba(13, 13, 13, 0.9);
    --terminal-text: #00ff41;
    --primary-text: #e0e0e0;
    --accent-color: #007bff;
    --input-bg: #333;
    --border-color: #444;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Poppins', sans-serif;
    background-color: var(--primary-bg);
    color: var(--primary-text);
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    overflow: hidden;
}

#terminal-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #000;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 100;
    opacity: 1;
    transition: opacity 1s ease-in-out;
    padding: 15px;
}

#terminal-container.fade-out {
    opacity: 0;
    pointer-events: none;
}

#terminal {
    width: 100%;
    max-width: 700px;
    height: 400px;
    background-color: var(--terminal-bg);
    border: 1px solid #333;
    border-radius: 8px;
    box-shadow: 0 0 25px rgba(0, 255, 65, 0.15);
    display: flex;
    flex-direction: column;
}

#terminal-header {
    background-color: #333;
    padding: 8px;
    border-top-left-radius: 7px;
    border-top-right-radius: 7px;
    display: flex;
    align-items: center;
}

.dot {
    height: 12px;
    width: 12px;
    border-radius: 50%;
    margin-right: 8px;
}
.dot.red { background-color: #ff5f56; }
.dot.yellow { background-color: #ffbd2e; }
.dot.green { background-color: #27c93f; }

#terminal-body {
    padding: 20px;
    overflow: hidden;
    flex-grow: 1;
}

#terminal-text {
    font-family: 'Roboto Mono', monospace;
    color: var(--terminal-text);
    font-size: 1rem;
    white-space: pre-wrap;
    word-break: break-all;
}

.cursor {
    display: inline-block;
    background-color: var(--terminal-text);
    width: 10px;
    height: 1.2rem;
    animation: blink 1s step-end infinite;
    vertical-align: bottom;
}

@keyframes blink {
    from, to { background-color: transparent; }
    50% { background-color: var(--terminal-text); }
}

#terminal-text.glitch {
    animation: glitch 1.5s linear;
}

@keyframes glitch {
    0%, 100% { transform: translate(0, 0); opacity: 1; }
    25% { transform: translate(-3px, 3px); }
    50% { transform: translate(3px, -3px); text-shadow: 0 0 8px red, 0 0 12px blue; }
    75% { transform: translate(-3px, -3px); }
}

#main-content {
    opacity: 0;
    transition: opacity 1s ease-in-out;
    transition-delay: 0.5s;
    transform: scale(0.95);
}

#main-content.visible {
    opacity: 1;
    transform: scale(1);
}

.form-container {
    perspective: 1000px;
}

.flipper {
    position: relative;
    width: 380px;
    min-height: 520px;
    transform-style: preserve-3d;
    transition: transform 0.8s;
}

.flipper.flipped {
    transform: rotateY(180deg);
}

.front, .back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
}

.back {
    transform: rotateY(180deg);
}

.form-box {
    background-color: var(--secondary-bg);
    padding: 40px 30px;
    border-radius: 10px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
    border: 1px solid var(--border-color);
}

.form-box h2 {
    text-align: center;
    margin-bottom: 30px;
    font-weight: 600;
}

.input-group {
    position: relative;
    margin-bottom: 35px;
}

.input-group label {
    position: absolute;
    top: -10px;
    left: 15px;
    background-color: var(--secondary-bg);
    padding: 0 5px;
    font-size: 0.9em;
    color: #aaa;
}

.input-group input {
    width: 100%;
    padding: 15px;
    background-color: var(--input-bg);
    border: 1px solid var(--border-color);
    border-radius: 5px;
    color: var(--primary-text);
    font-size: 1em;
    outline: none;
    transition: border-color 0.3s, box-shadow 0.3s;
}

.input-group input:focus {
    border-color: var(--accent-color);
    box-shadow: 0 0 5px var(--accent-color);
}

.form-btn {
    width: 100%;
    padding: 15px;
    background-color: var(--accent-color);
    border: none;
    border-radius: 5px;
    color: #fff;
    font-size: 1.1em;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.3s;
}

.form-btn:hover {
    background-color: #0056b3;
}

.form-switch {
    text-align: center;
    margin-top: 20px;
    font-size: 0.9em;
}

.form-switch span {
    color: var(--accent-color);
    cursor: pointer;
    font-weight: 600;
}

@media (max-width: 420px) {
    .flipper {
        width: 90vw;
    }
    .form-box {
        padding: 30px 20px;
    }
}```

### `script.js`
```javascript
document.addEventListener('DOMContentLoaded', () => {
    const terminalContainer = document.getElementById('terminal-container');
    const terminalText = document.getElementById('terminal-text');
    const mainContent = document.getElementById('main-content');
    const flipper = document.querySelector('.flipper');
    const showRegister = document.getElementById('show-register');
    const showLogin = document.getElementById('show-login');
    const registerForm = document.getElementById('register-form');
    const loginForm = document.getElementById('login-form');

    const lines = [
        "> Initializing alex useful scripts..",
        "> Loading up everything..",
        "> Now launching cheats script hub enjoy."
    ];
    let lineIndex = 0;
    let charIndex = 0;

    function typeLine() {
        const cursor = '<span class="cursor"></span>';
        if (lineIndex < lines.length) {
            if (charIndex < lines[lineIndex].length) {
                terminalText.innerHTML = terminalText.innerHTML.replace(cursor, '') + lines[lineIndex].charAt(charIndex) + cursor;
                charIndex++;
                setTimeout(typeLine, 50);
            } else {
                terminalText.innerHTML = terminalText.innerHTML.replace(cursor, '') + '\n' + cursor;
                lineIndex++;
                charIndex = 0;
                setTimeout(typeLine, 500);
            }
        } else {
            terminalText.innerHTML = terminalText.innerHTML.replace(cursor, '');
            setTimeout(glitchAndFade, 1000);
        }
    }

    function glitchAndFade() {
        terminalText.classList.add('glitch');
        setTimeout(() => {
            terminalContainer.classList.add('fade-out');
            mainContent.classList.add('visible');
        }, 1500);
    }

    showRegister.addEventListener('click', () => flipper.classList.add('flipped'));
    showLogin.addEventListener('click', () => flipper.classList.remove('flipped'));

    registerForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const username = document.getElementById('register-username').value;
        const password = document.getElementById('register-password').value;
        const reason = document.getElementById('find-reason').value;

        let users = JSON.parse(localStorage.getItem('alex-script-users')) || [];
        const userExists = users.some(user => user.username === username);

        if (userExists) {
            alert('Username is already taken. Please choose another one.');
            return;
        }

        users.push({ username, password });
        localStorage.setItem('alex-script-users', JSON.stringify(users));

        sendToDiscord(username, reason);
        
        sessionStorage.setItem('loggedInUser', username);
        window.location.href = 'main.html';
    });

    loginForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const username = document.getElementById('login-username').value;
        const password = document.getElementById('login-password').value;
        
        const users = JSON.parse(localStorage.getItem('alex-script-users')) || [];
        const foundUser = users.find(user => user.username === username && user.password === password);

        if (foundUser) {
            sessionStorage.setItem('loggedInUser', username);
            window.location.href = 'main.html';
        } else {
            alert('Invalid username or password.');
        }
    });

    function sendToDiscord(username, reason) {
        const webhookUrl = "https://discord.com/api/webhooks/1433590384545501194/_EIJPFIGmv_T3lL4zx00zP1QdalIamTApOlGCMDAlKKYL9eW3z2vIzjjLcJVwrcYmZ8K";
        
        const now = new Date();
        const date = `${now.getMonth() + 1}/${now.getDate()}/${now.getFullYear()}`;
        const time = now.toLocaleTimeString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });
        const createdTimestamp = `${date} - ${time}`;

        const payload = {
            embeds: [{
                title: "New Account Created",
                color: 3447003,
                fields: [
                    { name: "username", value: username, inline: true },
                    { name: "reason", value: reason, inline: true },
                    { name: "account created", value: createdTimestamp, inline: false }
                ],
                timestamp: new Date().toISOString()
            }]
        };

        fetch(webhookUrl, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
        }).catch(error => console.error('Error sending webhook:', error));
    }
    
    setTimeout(typeLine, 1000);
});
